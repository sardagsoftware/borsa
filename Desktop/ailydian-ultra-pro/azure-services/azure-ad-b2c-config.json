{
  "name": "Ailydian Ultra Pro - Azure AD B2C Configuration",
  "version": "1.0.0",
  "description": "Enterprise identity and access management with social login, MFA, and custom policies",
  "tenantName": "ailydianultrapro",
  "tenantDomain": "ailydianultrapro.onmicrosoft.com",
  "tenantId": "${AZURE_AD_B2C_TENANT_ID}",
  "region": "United States",
  "dataResidency": "US",
  "userFlows": [
    {
      "name": "B2C_1_signup_signin",
      "type": "SignUpOrSignIn",
      "version": "v2",
      "description": "Combined sign-up and sign-in user flow",
      "identityProviders": [
        "Email",
        "Google",
        "GitHub",
        "Microsoft"
      ],
      "userAttributes": {
        "collect": [
          "Email Address",
          "Given Name",
          "Surname",
          "Display Name",
          "Country/Region"
        ],
        "return": [
          "Email Addresses",
          "Given Name",
          "Surname",
          "Display Name",
          "Identity Provider",
          "User's Object ID",
          "Country/Region"
        ]
      },
      "multifactorAuthentication": {
        "enabled": true,
        "type": "Optional",
        "methods": ["Email", "SMS", "Authenticator App"]
      },
      "sessionBehavior": {
        "ssoEnabled": true,
        "sessionExpiryType": "Rolling",
        "sessionExpiryInSeconds": 86400
      },
      "tokenConfiguration": {
        "tokenLifetimeSeconds": 3600,
        "tokenType": "JWT",
        "includeClaimTypes": [
          "emails",
          "given_name",
          "family_name",
          "name",
          "oid",
          "sub",
          "tfp"
        ]
      }
    },
    {
      "name": "B2C_1_password_reset",
      "type": "PasswordReset",
      "version": "v2",
      "description": "Self-service password reset flow",
      "identityProviders": ["Email"],
      "userAttributes": {
        "collect": ["Email Address"],
        "return": ["Email Addresses", "User's Object ID"]
      },
      "verification": {
        "method": "Email",
        "codeExpiryMinutes": 10
      }
    },
    {
      "name": "B2C_1_profile_edit",
      "type": "ProfileEdit",
      "version": "v2",
      "description": "User profile editing flow",
      "identityProviders": [],
      "userAttributes": {
        "collect": [
          "Given Name",
          "Surname",
          "Display Name",
          "Country/Region"
        ],
        "return": [
          "Email Addresses",
          "Given Name",
          "Surname",
          "Display Name",
          "User's Object ID"
        ]
      }
    }
  ],
  "identityProviders": {
    "google": {
      "name": "Google",
      "clientId": "${GOOGLE_CLIENT_ID}",
      "clientSecret": "${GOOGLE_CLIENT_SECRET}",
      "scopes": ["email", "profile", "openid"],
      "domain_hint": "google.com"
    },
    "github": {
      "name": "GitHub",
      "clientId": "${GITHUB_CLIENT_ID}",
      "clientSecret": "${GITHUB_CLIENT_SECRET}",
      "scopes": ["user:email", "read:user"]
    },
    "microsoft": {
      "name": "Microsoft",
      "clientId": "${MICROSOFT_CLIENT_ID}",
      "clientSecret": "${MICROSOFT_CLIENT_SECRET}",
      "scopes": ["openid", "profile", "email"],
      "tenant": "common"
    }
  },
  "applications": [
    {
      "name": "Ailydian Ultra Pro Web",
      "applicationType": "Web",
      "redirectUris": [
        "http://localhost:5001/auth/callback",
        "https://ailydian.com/auth/callback",
        "https://www.ailydian.com/auth/callback"
      ],
      "logoutUri": "https://ailydian.com/auth/logout",
      "implicitFlow": false,
      "allowAccessTokensViaImplicitFlow": false,
      "replyUrlsWithType": [
        {
          "url": "https://ailydian.com/auth/callback",
          "type": "Web"
        }
      ]
    },
    {
      "name": "Ailydian Ultra Pro API",
      "applicationType": "WebApi",
      "identifierUris": ["https://ailydianultrapro.onmicrosoft.com/api"],
      "scopes": [
        {
          "name": "user_impersonation",
          "description": "Allow the application to access Ailydian Ultra Pro API on behalf of the signed-in user",
          "adminConsentDisplayName": "Access Ailydian Ultra Pro API",
          "adminConsentDescription": "Allow the application to access Ailydian Ultra Pro API on behalf of the signed-in user",
          "type": "User",
          "value": "user_impersonation"
        },
        {
          "name": "read",
          "description": "Read access to Ailydian Ultra Pro API",
          "type": "User",
          "value": "read"
        },
        {
          "name": "write",
          "description": "Write access to Ailydian Ultra Pro API",
          "type": "User",
          "value": "write"
        }
      ]
    }
  ],
  "customPolicies": {
    "enabled": true,
    "trustFramework": {
      "basePolicy": "B2C_1A_TrustFrameworkBase",
      "extensionsPolicy": "B2C_1A_TrustFrameworkExtensions",
      "signUpSignInPolicy": "B2C_1A_signup_signin"
    },
    "customizations": [
      {
        "name": "Custom User Attributes",
        "attributes": [
          {
            "name": "subscription",
            "displayName": "Subscription Plan",
            "dataType": "string",
            "userInputType": "Dropdown",
            "options": ["free", "pro", "enterprise"]
          },
          {
            "name": "role",
            "displayName": "User Role",
            "dataType": "string",
            "userInputType": "TextBox"
          },
          {
            "name": "organizationId",
            "displayName": "Organization ID",
            "dataType": "string",
            "userInputType": "TextBox"
          }
        ]
      },
      {
        "name": "Conditional Access Policies",
        "policies": [
          {
            "name": "Require MFA for Admin",
            "conditions": {
              "roleIncludes": ["ADMIN", "SUPER_ADMIN"]
            },
            "action": "RequireMFA"
          },
          {
            "name": "Block Risky Sign-Ins",
            "conditions": {
              "signInRiskLevel": ["High"]
            },
            "action": "Block"
          }
        ]
      }
    ]
  },
  "brandingCustomization": {
    "companyName": "Ailydian Ultra Pro",
    "backgroundColor": "#FFFFFF",
    "headerLogo": "https://ailydian.com/assets/logo.png",
    "bannerLogo": "https://ailydian.com/assets/banner.png",
    "squareLogo": "https://ailydian.com/assets/logo-square.png",
    "customCSS": "body { font-family: 'Inter', sans-serif; }",
    "primaryColor": "#10A37F",
    "accentColor": "#FF6B4A"
  },
  "security": {
    "tokenValidation": {
      "issuer": "https://ailydianultrapro.b2clogin.com/${AZURE_AD_B2C_TENANT_ID}/v2.0/",
      "audience": "${AZURE_AD_B2C_CLIENT_ID}",
      "algorithms": ["RS256"],
      "clockSkewSeconds": 300
    },
    "passwordComplexity": {
      "minimumLength": 8,
      "requireUppercase": true,
      "requireLowercase": true,
      "requireDigits": true,
      "requireSpecialCharacters": true,
      "bannedPasswords": ["Password123", "Ailydian123"]
    },
    "accountProtection": {
      "lockoutThreshold": 5,
      "lockoutDurationMinutes": 30,
      "resetCountAfterMinutes": 60
    },
    "auditLogging": {
      "enabled": true,
      "events": [
        "SignIn",
        "SignUp",
        "PasswordReset",
        "ProfileUpdate",
        "MFAEnrollment",
        "MFAChallenge"
      ],
      "retention": "90 days"
    }
  },
  "deployment": {
    "azureCLI": [
      "# 1. Create Azure AD B2C tenant",
      "az ad b2c tenant create --tenant-name ailydianultrapro --location 'United States' --data-residency US",
      "",
      "# 2. Register Web Application",
      "az ad app create --display-name 'Ailydian Ultra Pro Web' --sign-in-audience AzureADandPersonalMicrosoftAccount --web-redirect-uris 'https://ailydian.com/auth/callback'",
      "",
      "# 3. Register API Application",
      "az ad app create --display-name 'Ailydian Ultra Pro API' --identifier-uris 'https://ailydianultrapro.onmicrosoft.com/api'",
      "",
      "# 4. Create User Flows",
      "az ad b2c user-flow create --tenant ailydianultrapro --name B2C_1_signup_signin --type SignUpOrSignIn --version v2",
      "",
      "# 5. Configure Identity Providers",
      "az ad b2c identity-provider create --tenant ailydianultrapro --provider-name Google --client-id $GOOGLE_CLIENT_ID --client-secret $GOOGLE_CLIENT_SECRET",
      "",
      "# 6. Set up MFA",
      "az ad b2c user-flow update --tenant ailydianultrapro --name B2C_1_signup_signin --mfa Enabled"
    ],
    "terraform": "# Use azuread_application, azuread_service_principal resources",
    "azurePortal": [
      "1. Navigate to Azure Portal > Azure AD B2C",
      "2. Create new B2C tenant: ailydianultrapro",
      "3. Register applications (Web + API)",
      "4. Configure identity providers (Google, GitHub, Microsoft)",
      "5. Create user flows (Sign-up/Sign-in, Password Reset, Profile Edit)",
      "6. Configure MFA and security settings",
      "7. Customize branding (logo, colors, CSS)",
      "8. Test user flows"
    ]
  },
  "integration": {
    "nodejs": {
      "package": "@azure/msal-node",
      "version": "^2.0.0",
      "configuration": {
        "auth": {
          "clientId": "${AZURE_AD_B2C_CLIENT_ID}",
          "authority": "https://ailydianultrapro.b2clogin.com/ailydianultrapro.onmicrosoft.com/B2C_1_signup_signin",
          "clientSecret": "${AZURE_AD_B2C_CLIENT_SECRET}",
          "knownAuthorities": ["ailydianultrapro.b2clogin.com"],
          "redirectUri": "https://ailydian.com/auth/callback",
          "postLogoutRedirectUri": "https://ailydian.com"
        },
        "cache": {
          "cacheLocation": "localStorage",
          "storeAuthStateInCookie": true
        },
        "system": {
          "loggerOptions": {
            "logLevel": "Info",
            "piiLoggingEnabled": false
          }
        }
      }
    },
    "expressMiddleware": {
      "file": "middleware/azure-ad-b2c-auth.js",
      "usage": "app.use('/api/*', azureADB2CAuthMiddleware)"
    }
  },
  "testing": {
    "testUsers": [
      {
        "username": "testuser@ailydian.com",
        "displayName": "Test User",
        "role": "USER",
        "subscription": "pro"
      },
      {
        "username": "testadmin@ailydian.com",
        "displayName": "Test Admin",
        "role": "ADMIN",
        "subscription": "enterprise"
      }
    ],
    "testScenarios": [
      "Sign up with email",
      "Sign in with Google",
      "Sign in with GitHub",
      "Password reset flow",
      "Profile update",
      "MFA enrollment",
      "Token refresh",
      "Logout"
    ]
  },
  "monitoring": {
    "applicationInsights": {
      "trackAuthEvents": true,
      "customDimensions": ["userId", "role", "subscription", "identityProvider"]
    },
    "metrics": [
      "Total sign-ins",
      "Failed sign-ins",
      "MFA challenges",
      "Password resets",
      "Profile updates",
      "Active users (DAU/MAU)"
    ]
  },
  "compliance": {
    "gdpr": {
      "dataExport": "Users can export their data via /api/user/export",
      "dataDelete": "Users can delete their account via /api/user/delete",
      "consent": "Explicit consent required for data collection"
    },
    "soc2": {
      "auditLogging": "All authentication events logged",
      "accessControl": "Role-based access control (RBAC)",
      "encryption": "Data encrypted in transit and at rest"
    }
  },
  "notes": "Azure AD B2C provides enterprise-grade identity management with social login, MFA, custom policies, and full GDPR compliance. Use custom policies (Identity Experience Framework) for advanced scenarios."
}
