apiVersion: v1
kind: ConfigMap
metadata:
  name: gateway-config
  namespace: production
  labels:
    app: lydian-iq-gateway
    component: config
data:
  # Server Configuration
  NODE_ENV: "production"
  PORT: "3100"
  HOST: "0.0.0.0"
  LOG_LEVEL: "info"

  # Proxy Configuration
  TRUST_PROXY: "true"

  # Concurrency Limiter Configuration
  GATEWAY_MAX_CONCURRENCY: "64"
  GATEWAY_QUEUE_SIZE: "256"
  GATEWAY_RETRY_AFTER_SEC: "1"

  # Rate Limiter Configuration
  RATE_LIMIT_MAX: "100"
  RATE_LIMIT_WINDOW: "1 minute"
  RATE_LIMIT_ALLOW_CAPABILITIES: "true"

  # CORS Configuration
  CORS_ORIGIN: "https://console.ailydian.com,https://iq.ailydian.com"

  # Monitoring
  ENABLE_METRICS: "true"
  METRICS_PORT: "9090"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: console-config
  namespace: production
  labels:
    app: lydian-iq-console
    component: config
data:
  # Next.js Configuration
  NEXT_PUBLIC_API_URL: "https://iq.ailydian.com"

  # UI Request Throttling
  NEXT_PUBLIC_MAX_CONCURRENT: "4"

  # Force Show Menus (MUST be false in production)
  NEXT_PUBLIC_UI_FORCE_SHOW_MENUS: "false"

  # Default Role
  NEXT_PUBLIC_UI_DEFAULT_ROLE: "user"

  # Feature Flags
  NEXT_PUBLIC_ENABLE_MARKETPLACE: "true"
  NEXT_PUBLIC_ENABLE_ESG: "true"
  NEXT_PUBLIC_ENABLE_CIVIC_GRID: "true"

---
# Example Deployment with ConfigMaps
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lydian-iq-gateway
  namespace: production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: lydian-iq-gateway
  template:
    metadata:
      labels:
        app: lydian-iq-gateway
    spec:
      containers:
      - name: gateway
        image: azurecr.io/ailydian/lydian-iq-gateway:3.0.1
        ports:
        - containerPort: 3100
          name: http
        - containerPort: 9090
          name: metrics
        envFrom:
        - configMapRef:
            name: gateway-config
        - secretRef:
            name: gateway-secrets
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "2000m"
            memory: "2Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: 3100
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3100
          initialDelaySeconds: 10
          periodSeconds: 5
