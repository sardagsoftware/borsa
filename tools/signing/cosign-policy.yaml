# ========================================
# LYDIAN-IQ COSIGN SIGNING POLICY
# ========================================
# Purpose: Container image and artifact signing policy
# Compliance: SLSA Level 3, Supply Chain Security
# Version: 1.0
# Reference: https://docs.sigstore.dev/cosign/overview/

# ========== Signing Configuration ==========
signing:
  # Keyless signing using GitHub OIDC (recommended for CI/CD)
  keyless:
    enabled: true
    provider: "github-actions"
    # OIDC token must include these claims
    required_claims:
      - "repository_owner"
      - "repository"
      - "workflow"
      - "ref"
    # Expected issuer (GitHub OIDC)
    issuer: "https://token.actions.githubusercontent.com"
    # Subject pattern (repository URL)
    subject_pattern: "https://github.com/ailydian-ultra-pro/*"

  # Key-based signing (optional, for production releases)
  key_based:
    enabled: false
    # Private key stored in GitHub Secrets: COSIGN_PRIVATE_KEY
    # Public key stored in: tools/signing/cosign.pub
    key_secret_name: "COSIGN_PRIVATE_KEY"
    password_secret_name: "COSIGN_PASSWORD"

# ========== Verification Policy ==========
verification:
  # Require signature for production deployments
  required_for_environments:
    - "production"
    - "staging"

  # Verification strategy
  strategy:
    # Accept keyless signatures from trusted GitHub Actions
    - type: "keyless"
      issuer: "https://token.actions.githubusercontent.com"
      subject_pattern: "^https://github.com/ailydian-ultra-pro/.*$"
      required_annotations:
        - "org.opencontainers.image.source"
        - "org.opencontainers.image.revision"

    # Accept key-based signatures (if key_based.enabled = true)
    - type: "key"
      public_key_path: "tools/signing/cosign.pub"
      required_annotations:
        - "org.opencontainers.image.source"

# ========== Artifact Types ==========
artifacts:
  # Container images
  containers:
    enabled: true
    registries:
      - "ghcr.io/ailydian-ultra-pro/*"
      - "docker.io/ailydian/*"
    # Require signature for these tags
    required_tags:
      - "latest"
      - "v*"  # Version tags (v1.0.0, v2.1.3, etc.)
      - "production"
      - "staging"
    # Optional tags (dev, feature branches)
    optional_tags:
      - "dev"
      - "feature-*"
      - "PR-*"

  # Build artifacts (tarballs, binaries)
  blobs:
    enabled: true
    patterns:
      - "*.tar.gz"
      - "*.zip"
      - "lydian-iq-build-*"
    # Require signature for GitHub Releases
    required_for_releases: true

  # SLSA provenance
  provenance:
    enabled: true
    format: "in-toto"
    # Provenance files automatically signed with artifacts
    auto_sign: true

# ========== Annotations ==========
# Metadata attached to signatures
annotations:
  # Required annotations for all signatures
  required:
    - key: "org.opencontainers.image.source"
      description: "Source repository URL"
    - key: "org.opencontainers.image.revision"
      description: "Git commit SHA"
    - key: "org.opencontainers.image.created"
      description: "Build timestamp (ISO 8601)"

  # Optional annotations
  optional:
    - key: "org.opencontainers.image.version"
      description: "Semantic version"
    - key: "org.opencontainers.image.authors"
      description: "Build author/team"
    - key: "lydian.build.workflow"
      description: "GitHub Actions workflow name"
    - key: "lydian.build.run-id"
      description: "GitHub Actions run ID"
    - key: "lydian.build.environment"
      description: "Deployment environment (dev/staging/production)"
    - key: "lydian.security.scanned"
      description: "Security scan status (passed/failed)"
    - key: "lydian.slsa.level"
      description: "SLSA provenance level (1-4)"

# ========== Transparency Log ==========
transparency_log:
  # Upload signatures to Rekor (Sigstore transparency log)
  enabled: true
  rekor_url: "https://rekor.sigstore.dev"
  # Verify entries exist in transparency log
  verify_inclusion: true
  # Maximum age for transparency log entries (days)
  max_entry_age_days: 365

# ========== Policy Enforcement ==========
enforcement:
  # Block deployment if signature missing
  block_unsigned:
    production: true
    staging: true
    development: false

  # Block deployment if signature invalid
  block_invalid:
    production: true
    staging: true
    development: true

  # Allowed signature age (days)
  max_signature_age_days:
    production: 30
    staging: 90
    development: 365

  # Require SLSA provenance
  require_slsa_provenance:
    production: true
    staging: true
    development: false
    minimum_level: 2  # SLSA Level 2+

# ========== Audit Configuration ==========
audit:
  # Log all signature verification attempts
  log_verifications: true
  # Log all signing operations
  log_signings: true
  # Retention period for audit logs (days)
  retention_days: 365
  # Export audit logs to
  export_to:
    - "stackdriver"  # Google Cloud Logging
    - "azure-monitor"  # Azure Monitor
    - "github-security-events"  # GitHub Security tab

# ========== Rotation Policy ==========
rotation:
  # Key rotation schedule (for key-based signing)
  key_rotation_days: 90
  # Notify before key expiration (days)
  expiration_warning_days: 14
  # Automated rotation (requires secret management integration)
  auto_rotate: false

# ========== Compliance Mapping ==========
compliance:
  # SLSA Build Level 3 requirements
  slsa_level_3:
    - "keyless signing with OIDC"
    - "provenance generation"
    - "transparency log upload"
    - "non-falsifiable provenance"

  # SOC 2 requirements
  soc2:
    - "signature verification before deployment"
    - "audit logging of all signature operations"
    - "key rotation policy"

  # NIST SSDF requirements
  nist_ssdf:
    - "PW.1.2: Software artifacts signed"
    - "PW.1.3: Signature verification in deployment"
    - "PS.1.1: Supply chain transparency"

# ========================================
# USAGE EXAMPLES
# ========================================
#
# Sign a container image (keyless):
# ```bash
# cosign sign --yes \
#   -a org.opencontainers.image.source=https://github.com/ailydian-ultra-pro \
#   -a org.opencontainers.image.revision=$(git rev-parse HEAD) \
#   -a lydian.slsa.level=3 \
#   ghcr.io/ailydian-ultra-pro/app:latest
# ```
#
# Sign a blob (SLSA provenance):
# ```bash
# cosign sign-blob \
#   --bundle slsa-provenance.bundle \
#   slsa-provenance.json
# ```
#
# Verify signature (keyless):
# ```bash
# cosign verify \
#   --certificate-identity-regexp '^https://github.com/ailydian-ultra-pro/.*$' \
#   --certificate-oidc-issuer https://token.actions.githubusercontent.com \
#   ghcr.io/ailydian-ultra-pro/app:latest
# ```
#
# Verify blob signature:
# ```bash
# cosign verify-blob \
#   --bundle slsa-provenance.bundle \
#   slsa-provenance.json
# ```
#
# ========================================
