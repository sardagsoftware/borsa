{
  "name": "Ailydian Ultra Pro - Azure Front Door Configuration",
  "description": "Multi-region global load balancing with CDN, WAF, auto-failover, and SSL/TLS termination for 99.99% availability",
  "version": "1.0.0",
  "frontDoorProfile": {
    "name": "ailydian-frontdoor",
    "sku": "Premium",
    "tier": "Premium",
    "resourceGroup": "ailydian-ultra-pro-rg",
    "location": "Global",
    "features": {
      "globalLoadBalancing": true,
      "wafIntegration": true,
      "privateLink": true,
      "advancedAnalytics": true,
      "managedRules": true
    }
  },
  "pricing": {
    "tier": "Premium",
    "basePrice": "$35/month",
    "dataTransferOut": "$0.12/GB (first 10TB)",
    "requestPricing": "$0.01/10K requests",
    "wafPolicy": "Included in Premium",
    "ruleSets": "Included in Premium",
    "estimatedMonthlyCost": {
      "base": "$35",
      "dataTransfer": "$120 (1TB/month)",
      "requests": "$30 (30M requests/month)",
      "total": "$185/month"
    },
    "notes": "Standard tier available at $22/month (no WAF, no Private Link)"
  },
  "endpoints": [
    {
      "name": "ailydian-global-endpoint",
      "customDomain": "ailydian.com",
      "enabledState": "Enabled",
      "sessionAffinityState": "Disabled",
      "features": {
        "httpsOnly": true,
        "certificateSource": "FrontDoor",
        "minimumTlsVersion": "1.2",
        "http2": true,
        "compression": true
      }
    }
  ],
  "originGroups": [
    {
      "name": "primary-app-servers",
      "loadBalancingSettings": {
        "sampleSize": 4,
        "successfulSamplesRequired": 3,
        "additionalLatencyMilliseconds": 50
      },
      "healthProbeSettings": {
        "probePath": "/api/health",
        "probeRequestType": "GET",
        "probeProtocol": "Https",
        "probeIntervalInSeconds": 30,
        "healthyStatusCodeRanges": ["200-299", "401"]
      },
      "sessionAffinityState": "Disabled",
      "trafficRestorationTimeToHealedOrNewEndpointsInMinutes": 5,
      "origins": [
        {
          "name": "us-east-primary",
          "hostName": "ailydian-useast.azurewebsites.net",
          "httpPort": 80,
          "httpsPort": 443,
          "priority": 1,
          "weight": 1000,
          "enabledState": "Enabled",
          "privateLink": {
            "enabled": true,
            "privateLinkResourceId": "/subscriptions/{subscriptionId}/resourceGroups/ailydian-ultra-pro-rg/providers/Microsoft.Web/sites/ailydian-useast"
          }
        },
        {
          "name": "us-west-secondary",
          "hostName": "ailydian-uswest.azurewebsites.net",
          "httpPort": 80,
          "httpsPort": 443,
          "priority": 2,
          "weight": 500,
          "enabledState": "Enabled",
          "privateLink": {
            "enabled": true,
            "privateLinkResourceId": "/subscriptions/{subscriptionId}/resourceGroups/ailydian-ultra-pro-rg/providers/Microsoft.Web/sites/ailydian-uswest"
          }
        },
        {
          "name": "europe-west-secondary",
          "hostName": "ailydian-euwest.azurewebsites.net",
          "httpPort": 80,
          "httpsPort": 443,
          "priority": 2,
          "weight": 500,
          "enabledState": "Enabled",
          "privateLink": {
            "enabled": true,
            "privateLinkResourceId": "/subscriptions/{subscriptionId}/resourceGroups/ailydian-ultra-pro-rg/providers/Microsoft.Web/sites/ailydian-euwest"
          }
        }
      ]
    },
    {
      "name": "api-servers",
      "loadBalancingSettings": {
        "sampleSize": 4,
        "successfulSamplesRequired": 2,
        "additionalLatencyMilliseconds": 30
      },
      "healthProbeSettings": {
        "probePath": "/api/health",
        "probeRequestType": "HEAD",
        "probeProtocol": "Https",
        "probeIntervalInSeconds": 15,
        "healthyStatusCodeRanges": ["200-299"]
      },
      "origins": [
        {
          "name": "api-us-east",
          "hostName": "api-useast.ailydian.com",
          "httpPort": 80,
          "httpsPort": 443,
          "priority": 1,
          "weight": 1000,
          "enabledState": "Enabled"
        },
        {
          "name": "api-europe-west",
          "hostName": "api-euwest.ailydian.com",
          "httpPort": 80,
          "httpsPort": 443,
          "priority": 2,
          "weight": 500,
          "enabledState": "Enabled"
        },
        {
          "name": "api-asia-southeast",
          "hostName": "api-asiase.ailydian.com",
          "httpPort": 80,
          "httpsPort": 443,
          "priority": 3,
          "weight": 250,
          "enabledState": "Enabled"
        }
      ]
    },
    {
      "name": "static-storage",
      "loadBalancingSettings": {
        "sampleSize": 2,
        "successfulSamplesRequired": 1,
        "additionalLatencyMilliseconds": 0
      },
      "healthProbeSettings": {
        "probePath": "/health.txt",
        "probeRequestType": "HEAD",
        "probeProtocol": "Https",
        "probeIntervalInSeconds": 60
      },
      "origins": [
        {
          "name": "cdn-primary",
          "hostName": "ailydiancdn.blob.core.windows.net",
          "httpPort": 80,
          "httpsPort": 443,
          "priority": 1,
          "weight": 1000,
          "enabledState": "Enabled"
        }
      ]
    }
  ],
  "routes": [
    {
      "name": "web-app-route",
      "patternsToMatch": [
        "/*"
      ],
      "customDomains": [
        "ailydian.com",
        "www.ailydian.com"
      ],
      "originGroup": "primary-app-servers",
      "supportedProtocols": ["Http", "Https"],
      "forwardingProtocol": "HttpsOnly",
      "httpsRedirect": "Enabled",
      "linkToDefaultDomain": "Enabled",
      "cacheConfiguration": {
        "queryStringCachingBehavior": "IgnoreQueryString",
        "compressionSettings": {
          "contentTypesToCompress": [
            "text/html",
            "text/css",
            "text/javascript",
            "application/javascript",
            "application/json",
            "application/xml"
          ],
          "isCompressionEnabled": true
        },
        "cacheDuration": "00:05:00"
      }
    },
    {
      "name": "api-route",
      "patternsToMatch": [
        "/api/*"
      ],
      "customDomains": [
        "ailydian.com"
      ],
      "originGroup": "api-servers",
      "supportedProtocols": ["Https"],
      "forwardingProtocol": "HttpsOnly",
      "httpsRedirect": "Enabled",
      "cacheConfiguration": {
        "queryStringCachingBehavior": "UseQueryString",
        "compressionSettings": {
          "contentTypesToCompress": [
            "application/json",
            "application/xml"
          ],
          "isCompressionEnabled": true
        },
        "cacheDuration": "00:01:00"
      }
    },
    {
      "name": "static-assets-route",
      "patternsToMatch": [
        "/static/*",
        "/assets/*",
        "/images/*"
      ],
      "customDomains": [
        "cdn.ailydian.com"
      ],
      "originGroup": "static-storage",
      "supportedProtocols": ["Https"],
      "forwardingProtocol": "HttpsOnly",
      "cacheConfiguration": {
        "queryStringCachingBehavior": "IgnoreQueryString",
        "compressionSettings": {
          "isCompressionEnabled": true
        },
        "cacheDuration": "7.00:00:00"
      }
    }
  ],
  "wafPolicy": {
    "name": "ailydian-waf-policy",
    "policyMode": "Prevention",
    "enabledState": "Enabled",
    "customRules": [
      {
        "name": "RateLimitRule",
        "priority": 1,
        "ruleType": "RateLimitRule",
        "rateLimitDurationInMinutes": 1,
        "rateLimitThreshold": 100,
        "matchConditions": [
          {
            "matchVariable": "RemoteAddr",
            "operator": "IPMatch",
            "matchValue": ["0.0.0.0/0"]
          }
        ],
        "action": "Block"
      },
      {
        "name": "BlockBadBots",
        "priority": 2,
        "ruleType": "MatchRule",
        "matchConditions": [
          {
            "matchVariable": "RequestHeader",
            "selector": "User-Agent",
            "operator": "Contains",
            "matchValue": ["bot", "crawler", "spider", "scraper"],
            "transforms": ["Lowercase"]
          }
        ],
        "action": "Block",
        "exclusions": [
          "Googlebot",
          "Bingbot",
          "Slackbot"
        ]
      },
      {
        "name": "GeoFenceRule",
        "priority": 3,
        "ruleType": "MatchRule",
        "matchConditions": [
          {
            "matchVariable": "RemoteAddr",
            "operator": "GeoMatch",
            "negateCondition": true,
            "matchValue": ["US", "CA", "GB", "DE", "FR", "ES", "IT", "NL", "TR", "JP", "AU"]
          }
        ],
        "action": "Log",
        "notes": "Log traffic from unexpected countries for analysis"
      },
      {
        "name": "BlockSQLInjection",
        "priority": 4,
        "ruleType": "MatchRule",
        "matchConditions": [
          {
            "matchVariable": "QueryString",
            "operator": "Contains",
            "matchValue": ["'", "--", "/*", "*/", "xp_", "sp_", "exec", "union", "select"],
            "transforms": ["Lowercase", "UrlDecode"]
          }
        ],
        "action": "Block"
      },
      {
        "name": "BlockXSS",
        "priority": 5,
        "ruleType": "MatchRule",
        "matchConditions": [
          {
            "matchVariable": "QueryString",
            "operator": "Contains",
            "matchValue": ["<script", "javascript:", "onerror=", "onload="],
            "transforms": ["Lowercase", "UrlDecode", "HtmlEntityDecode"]
          }
        ],
        "action": "Block"
      }
    ],
    "managedRules": {
      "managedRuleSets": [
        {
          "ruleSetType": "Microsoft_DefaultRuleSet",
          "ruleSetVersion": "2.1",
          "ruleGroupOverrides": [
            {
              "ruleGroupName": "SQLI",
              "action": "Block"
            },
            {
              "ruleGroupName": "XSS",
              "action": "Block"
            },
            {
              "ruleGroupName": "RCE",
              "action": "Block"
            }
          ]
        },
        {
          "ruleSetType": "Microsoft_BotManagerRuleSet",
          "ruleSetVersion": "1.0",
          "action": "Block",
          "exclusions": [
            "Googlebot",
            "Bingbot",
            "Slackbot",
            "LinkedInBot",
            "facebookexternalhit"
          ]
        }
      ]
    }
  },
  "securityPolicy": {
    "name": "ailydian-security-policy",
    "patterns": [
      "/*"
    ],
    "wafPolicy": "ailydian-waf-policy",
    "sslSettings": {
      "minimumTlsVersion": "TLS12",
      "certificateType": "ManagedCertificate",
      "protocols": ["TLSv1.2", "TLSv1.3"],
      "cipherSuites": [
        "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
        "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
        "TLS_AES_256_GCM_SHA384",
        "TLS_AES_128_GCM_SHA256"
      ]
    },
    "ddosProtection": {
      "enabled": true,
      "type": "Standard",
      "mitigationMode": "Automatic"
    }
  },
  "ruleSets": [
    {
      "name": "GlobalRules",
      "rules": [
        {
          "name": "EnforceHTTPS",
          "order": 1,
          "matchConditions": [
            {
              "matchVariable": "RequestScheme",
              "operator": "Equal",
              "matchValue": ["HTTP"]
            }
          ],
          "actions": [
            {
              "name": "UrlRedirect",
              "parameters": {
                "redirectType": "PermanentRedirect",
                "redirectProtocol": "Https"
              }
            }
          ]
        },
        {
          "name": "RemoveServerHeader",
          "order": 2,
          "matchConditions": [
            {
              "matchVariable": "Always",
              "operator": "Any"
            }
          ],
          "actions": [
            {
              "name": "ModifyResponseHeader",
              "parameters": {
                "headerAction": "Delete",
                "headerName": "Server"
              }
            }
          ]
        },
        {
          "name": "AddSecurityHeaders",
          "order": 3,
          "matchConditions": [
            {
              "matchVariable": "Always",
              "operator": "Any"
            }
          ],
          "actions": [
            {
              "name": "ModifyResponseHeader",
              "parameters": {
                "headerAction": "Append",
                "headerName": "X-Content-Type-Options",
                "value": "nosniff"
              }
            },
            {
              "name": "ModifyResponseHeader",
              "parameters": {
                "headerAction": "Append",
                "headerName": "X-Frame-Options",
                "value": "SAMEORIGIN"
              }
            },
            {
              "name": "ModifyResponseHeader",
              "parameters": {
                "headerAction": "Append",
                "headerName": "X-XSS-Protection",
                "value": "1; mode=block"
              }
            },
            {
              "name": "ModifyResponseHeader",
              "parameters": {
                "headerAction": "Append",
                "headerName": "Strict-Transport-Security",
                "value": "max-age=31536000; includeSubDomains"
              }
            },
            {
              "name": "ModifyResponseHeader",
              "parameters": {
                "headerAction": "Append",
                "headerName": "Content-Security-Policy",
                "value": "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://api.ailydian.com wss://ailydian-signalr.service.signalr.net"
              }
            }
          ]
        },
        {
          "name": "CacheBustingForHTML",
          "order": 4,
          "matchConditions": [
            {
              "matchVariable": "RequestPath",
              "operator": "EndsWith",
              "matchValue": [".html", "/"]
            }
          ],
          "actions": [
            {
              "name": "ModifyResponseHeader",
              "parameters": {
                "headerAction": "Overwrite",
                "headerName": "Cache-Control",
                "value": "no-cache, no-store, must-revalidate"
              }
            }
          ]
        },
        {
          "name": "LongCacheForAssets",
          "order": 5,
          "matchConditions": [
            {
              "matchVariable": "RequestPath",
              "operator": "EndsWith",
              "matchValue": [".js", ".css", ".woff", ".woff2", ".png", ".jpg", ".jpeg", ".gif", ".svg", ".webp", ".avif"]
            }
          ],
          "actions": [
            {
              "name": "ModifyResponseHeader",
              "parameters": {
                "headerAction": "Overwrite",
                "headerName": "Cache-Control",
                "value": "public, max-age=31536000, immutable"
              }
            }
          ]
        }
      ]
    }
  ],
  "caching": {
    "globalCacheSettings": {
      "cacheBehavior": "OverrideIfOriginMissing",
      "cacheDuration": "1.00:00:00",
      "dynamicCompression": "Enabled",
      "queryStringCachingBehavior": "IgnoreQueryString"
    },
    "cachingRules": [
      {
        "name": "APICache",
        "matchConditions": [
          {
            "matchVariable": "RequestPath",
            "operator": "BeginsWith",
            "matchValue": ["/api/"]
          }
        ],
        "cacheBehavior": "OverrideAlways",
        "cacheDuration": "00:05:00",
        "queryStringCachingBehavior": "UseQueryString"
      },
      {
        "name": "StaticAssetCache",
        "matchConditions": [
          {
            "matchVariable": "RequestPath",
            "operator": "Contains",
            "matchValue": ["/static/", "/assets/"]
          }
        ],
        "cacheBehavior": "OverrideAlways",
        "cacheDuration": "7.00:00:00",
        "queryStringCachingBehavior": "IgnoreQueryString"
      },
      {
        "name": "NoCache",
        "matchConditions": [
          {
            "matchVariable": "RequestPath",
            "operator": "Contains",
            "matchValue": ["/admin/", "/auth/"]
          }
        ],
        "cacheBehavior": "BypassCache"
      }
    ]
  },
  "monitoring": {
    "diagnosticSettings": {
      "name": "frontdoor-diagnostics",
      "logs": [
        {
          "category": "FrontDoorAccessLog",
          "enabled": true,
          "retentionDays": 30
        },
        {
          "category": "FrontDoorHealthProbeLog",
          "enabled": true,
          "retentionDays": 7
        },
        {
          "category": "FrontDoorWebApplicationFirewallLog",
          "enabled": true,
          "retentionDays": 90
        }
      ],
      "metrics": [
        {
          "category": "AllMetrics",
          "enabled": true,
          "retentionDays": 30
        }
      ],
      "destinations": {
        "logAnalyticsWorkspace": "ailydian-logs",
        "storageAccount": "ailydiandiagnostics"
      }
    },
    "alerts": [
      {
        "name": "HighLatencyAlert",
        "description": "Alert when P95 latency > 1000ms",
        "severity": "Warning",
        "evaluationFrequency": "PT5M",
        "windowSize": "PT15M",
        "criteria": {
          "metricName": "TotalLatency",
          "operator": "GreaterThan",
          "threshold": 1000,
          "aggregation": "P95"
        },
        "actions": ["Email ops team"]
      },
      {
        "name": "OriginHealthAlert",
        "description": "Alert when origin health drops below 80%",
        "severity": "Critical",
        "evaluationFrequency": "PT1M",
        "windowSize": "PT5M",
        "criteria": {
          "metricName": "OriginHealthPercentage",
          "operator": "LessThan",
          "threshold": 80,
          "aggregation": "Average"
        },
        "actions": ["PagerDuty alert", "Email ops team"]
      },
      {
        "name": "WAFBlockedRequestsAlert",
        "description": "Alert when WAF blocks spike (> 1000/min)",
        "severity": "Warning",
        "evaluationFrequency": "PT1M",
        "windowSize": "PT5M",
        "criteria": {
          "metricName": "WebApplicationFirewallRequestCount",
          "operator": "GreaterThan",
          "threshold": 1000,
          "aggregation": "Total",
          "dimensions": [
            {
              "name": "Action",
              "values": ["Block"]
            }
          ]
        },
        "actions": ["Email security team"]
      }
    ]
  },
  "performanceTargets": {
    "globalLatency": {
      "target": "< 50ms",
      "p95": "< 100ms",
      "p99": "< 200ms"
    },
    "originLatency": {
      "target": "< 200ms",
      "p95": "< 500ms",
      "p99": "< 1000ms"
    },
    "availability": {
      "target": "99.99%",
      "monthlyDowntime": "< 4.38 minutes"
    },
    "cacheHitRatio": {
      "target": "> 90%",
      "static": "> 95%",
      "api": "> 70%"
    }
  },
  "failoverScenarios": [
    {
      "scenario": "Primary Region (US East) Down",
      "detection": "Health probe fails 3 consecutive times (90 seconds)",
      "action": "Automatic failover to US West",
      "ttl": "5 minutes",
      "rollback": "Automatic when primary healthy for 15 minutes"
    },
    {
      "scenario": "All US Regions Down",
      "detection": "Both US East and US West fail health probes",
      "action": "Failover to Europe West",
      "ttl": "5 minutes",
      "rollback": "Manual verification required"
    },
    {
      "scenario": "DDoS Attack Detected",
      "detection": "Traffic spike > 10x normal + WAF blocks > 5000/min",
      "action": "Enable aggressive WAF rules + rate limiting",
      "ttl": "Until attack subsides",
      "rollback": "Automatic after 1 hour of normal traffic"
    }
  ],
  "deployment": {
    "azureCLI": [
      "# 1. Create Front Door profile",
      "az afd profile create --profile-name ailydian-frontdoor --resource-group ailydian-ultra-pro-rg --sku Premium_AzureFrontDoor",
      "",
      "# 2. Create endpoint",
      "az afd endpoint create --profile-name ailydian-frontdoor --endpoint-name ailydian-global-endpoint --resource-group ailydian-ultra-pro-rg --enabled-state Enabled",
      "",
      "# 3. Create origin group",
      "az afd origin-group create --profile-name ailydian-frontdoor --origin-group-name primary-app-servers --resource-group ailydian-ultra-pro-rg --probe-path /api/health --probe-protocol Https --probe-interval-in-seconds 30 --sample-size 4 --successful-samples-required 3",
      "",
      "# 4. Add origins",
      "az afd origin create --profile-name ailydian-frontdoor --origin-group-name primary-app-servers --origin-name us-east-primary --resource-group ailydian-ultra-pro-rg --host-name ailydian-useast.azurewebsites.net --priority 1 --weight 1000 --enabled-state Enabled --https-port 443",
      "",
      "# 5. Create route",
      "az afd route create --profile-name ailydian-frontdoor --endpoint-name ailydian-global-endpoint --route-name web-app-route --resource-group ailydian-ultra-pro-rg --origin-group primary-app-servers --patterns-to-match '/*' --supported-protocols Https --forwarding-protocol HttpsOnly --https-redirect Enabled",
      "",
      "# 6. Create WAF policy",
      "az network front-door waf-policy create --name ailydianWafPolicy --resource-group ailydian-ultra-pro-rg --sku Premium_AzureFrontDoor --mode Prevention",
      "",
      "# 7. Add custom domain",
      "az afd custom-domain create --profile-name ailydian-frontdoor --custom-domain-name ailydian-com --resource-group ailydian-ultra-pro-rg --host-name ailydian.com --minimum-tls-version TLS12",
      "",
      "# 8. Enable diagnostics",
      "az monitor diagnostic-settings create --name frontdoor-diagnostics --resource /subscriptions/{subscriptionId}/resourceGroups/ailydian-ultra-pro-rg/providers/Microsoft.Cdn/profiles/ailydian-frontdoor --logs '[{\"category\":\"FrontDoorAccessLog\",\"enabled\":true},{\"category\":\"FrontDoorWebApplicationFirewallLog\",\"enabled\":true}]' --workspace /subscriptions/{subscriptionId}/resourceGroups/ailydian-ultra-pro-rg/providers/Microsoft.OperationalInsights/workspaces/ailydian-logs"
    ],
    "terraform": {
      "resource": "azurerm_cdn_frontdoor_profile",
      "example": "resource \"azurerm_cdn_frontdoor_profile\" \"ailydian\" {\n  name                = \"ailydian-frontdoor\"\n  resource_group_name = azurerm_resource_group.ailydian.name\n  sku_name            = \"Premium_AzureFrontDoor\"\n}"
    }
  },
  "regions": [
    {
      "name": "US East",
      "location": "East US",
      "role": "Primary",
      "priority": 1,
      "weight": 1000,
      "services": ["Web App", "API", "Database", "Cache"]
    },
    {
      "name": "US West",
      "location": "West US 2",
      "role": "Secondary",
      "priority": 2,
      "weight": 500,
      "services": ["Web App", "API", "Database Read Replica", "Cache"]
    },
    {
      "name": "Europe West",
      "location": "West Europe",
      "role": "Secondary",
      "priority": 2,
      "weight": 500,
      "services": ["Web App", "API", "Database Read Replica", "Cache"]
    },
    {
      "name": "Asia Southeast",
      "location": "Southeast Asia",
      "role": "Tertiary",
      "priority": 3,
      "weight": 250,
      "services": ["API", "Cache"]
    }
  ],
  "environmentVariables": {
    "AZURE_FRONTDOOR_ENDPOINT": "https://ailydian-global-endpoint.azurefd.net",
    "AZURE_FRONTDOOR_CUSTOM_DOMAIN": "https://ailydian.com",
    "AZURE_FRONTDOOR_ID": "${AZURE_FRONTDOOR_ID}",
    "ENABLE_FRONTDOOR_HEADERS": "true"
  },
  "notes": "Azure Front Door provides global load balancing, auto-failover, WAF protection, and 99.99% SLA. Premium tier includes Private Link, advanced WAF rules, and bot protection."
}
