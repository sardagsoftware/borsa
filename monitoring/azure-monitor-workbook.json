{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "# üìä Ailydian Ultra Pro - Advanced Analytics Workbook\n\n**Enterprise Monitoring & Analytics Platform**\n\nThis workbook provides deep-dive analytics across all Ailydian infrastructure services with interactive queries, custom visualizations, and automated insights.\n\n---"
      },
      "name": "text-header"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "time-range-param",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 3600000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                }
              ]
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "label": "Time Range"
          },
          {
            "id": "resource-param",
            "version": "KqlParameterItem/1.0",
            "name": "Resource",
            "type": 5,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "Resources\n| where type in ('microsoft.containerservice/managedclusters', 'microsoft.sql/servers/databases', 'microsoft.cache/redis', 'microsoft.network/frontdoors', 'microsoft.signalrservice/signalr', 'microsoft.search/searchservices', 'microsoft.storage/storageaccounts')\n| where resourceGroup == 'ailydian-ultra-pro-rg'\n| project id, name, type\n| order by name asc",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all",
            "label": "Resources"
          },
          {
            "id": "environment-param",
            "version": "KqlParameterItem/1.0",
            "name": "Environment",
            "type": 2,
            "isRequired": true,
            "query": "{\"version\":\"1.0.0\",\"content\":\"[\\\"production\\\",\\\"staging\\\",\\\"development\\\"]\",\"transformers\":null}",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "defaultValue": "production",
            "label": "Environment"
          }
        ],
        "style": "pills",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "parameters-global"
    },
    {
      "type": 1,
      "content": {
        "json": "## üéØ Executive Summary\n\nKey metrics and health indicators for the Ailydian ecosystem."
      },
      "name": "text-executive-summary"
    },
    {
      "type": 10,
      "content": {
        "chartId": "workbook-summary-grid",
        "version": "MetricsItem/2.0",
        "size": 4,
        "chartType": 0,
        "resourceType": "microsoft.insights/components",
        "metricScope": 0,
        "resourceIds": [
          "/subscriptions/{subscriptionId}/resourceGroups/ailydian-ultra-pro-rg/providers/Microsoft.Insights/components/ailydian-insights"
        ],
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "metrics": [
          {
            "namespace": "microsoft.insights/components",
            "metric": "requests/count",
            "aggregation": 1,
            "splitBy": null,
            "columnName": "Total Requests"
          },
          {
            "namespace": "microsoft.insights/components",
            "metric": "requests/duration",
            "aggregation": 4,
            "splitBy": null,
            "columnName": "Avg Response Time (ms)"
          },
          {
            "namespace": "microsoft.insights/components",
            "metric": "requests/failed",
            "aggregation": 1,
            "splitBy": null,
            "columnName": "Failed Requests"
          },
          {
            "namespace": "microsoft.insights/components",
            "metric": "users/count",
            "aggregation": 5,
            "splitBy": null,
            "columnName": "Active Users"
          }
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Total Requests",
              "formatter": 4,
              "formatOptions": {
                "palette": "blue",
                "aggregation": "Sum"
              }
            },
            {
              "columnMatch": "Avg Response Time (ms)",
              "formatter": 8,
              "formatOptions": {
                "palette": "greenRed",
                "aggregation": "Average"
              },
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 2
                }
              }
            },
            {
              "columnMatch": "Failed Requests",
              "formatter": 8,
              "formatOptions": {
                "palette": "redGreen",
                "aggregation": "Sum"
              }
            },
            {
              "columnMatch": "Active Users",
              "formatter": 4,
              "formatOptions": {
                "palette": "purple",
                "aggregation": "Unique"
              }
            }
          ]
        }
      },
      "name": "metrics-summary"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "requests\n| where timestamp {TimeRange}\n| summarize \n    TotalRequests = count(),\n    SuccessfulRequests = countif(success == true),\n    FailedRequests = countif(success == false),\n    AvgDuration = avg(duration),\n    P50Duration = percentile(duration, 50),\n    P95Duration = percentile(duration, 95),\n    P99Duration = percentile(duration, 99)\n| extend \n    SuccessRate = round((SuccessfulRequests * 100.0 / TotalRequests), 2),\n    Availability = round((SuccessfulRequests * 100.0 / TotalRequests), 3)\n| project \n    ['Total Requests'] = TotalRequests,\n    ['Success Rate'] = strcat(SuccessRate, '%'),\n    ['Availability (SLA)'] = strcat(Availability, '%'),\n    ['Avg Response Time'] = strcat(round(AvgDuration, 2), ' ms'),\n    ['P50'] = strcat(round(P50Duration, 2), ' ms'),\n    ['P95'] = strcat(round(P95Duration, 2), ' ms'),\n    ['P99'] = strcat(round(P99Duration, 2), ' ms')",
        "size": 3,
        "title": "Performance Overview",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Column",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "Value",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true
        }
      },
      "name": "query-performance-overview"
    },
    {
      "type": 1,
      "content": {
        "json": "---\n\n## ‚ò∏Ô∏è Kubernetes (AKS) Analytics\n\nDeep-dive into container orchestration metrics, pod health, and resource utilization."
      },
      "name": "text-kubernetes-header"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let startTime = {TimeRange:start};\nlet endTime = {TimeRange:end};\nKubePodInventory\n| where TimeGenerated between (startTime .. endTime)\n| where ClusterName == 'ailydian-aks'\n| summarize \n    TotalPods = dcount(PodUid),\n    RunningPods = dcountif(PodUid, PodStatus == 'Running'),\n    PendingPods = dcountif(PodUid, PodStatus == 'Pending'),\n    FailedPods = dcountif(PodUid, PodStatus == 'Failed'),\n    UnknownPods = dcountif(PodUid, PodStatus == 'Unknown')\n    by Namespace\n| extend HealthScore = round((RunningPods * 100.0 / TotalPods), 2)\n| project \n    Namespace,\n    TotalPods,\n    RunningPods,\n    PendingPods,\n    FailedPods,\n    UnknownPods,\n    ['Health Score'] = strcat(HealthScore, '%')\n| order by TotalPods desc",
        "size": 0,
        "title": "Pod Health by Namespace",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "RunningPods",
              "formatter": 8,
              "formatOptions": {
                "palette": "green"
              }
            },
            {
              "columnMatch": "PendingPods",
              "formatter": 8,
              "formatOptions": {
                "palette": "yellow"
              }
            },
            {
              "columnMatch": "FailedPods",
              "formatter": 8,
              "formatOptions": {
                "palette": "red"
              }
            },
            {
              "columnMatch": "Health Score",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": ">=",
                    "thresholdValue": "95",
                    "representation": "success",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": ">=",
                    "thresholdValue": "80",
                    "representation": "warning",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "failed",
                    "text": "{0}{1}"
                  }
                ]
              }
            }
          ]
        }
      },
      "name": "query-aks-pod-health"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let startTime = {TimeRange:start};\nlet endTime = {TimeRange:end};\nPerf\n| where TimeGenerated between (startTime .. endTime)\n| where ObjectName == 'K8SNode'\n| where CounterName in ('cpuUsageNanoCores', 'memoryWorkingSetBytes')\n| extend NodeName = Computer\n| summarize \n    AvgCPU = avg(iff(CounterName == 'cpuUsageNanoCores', CounterValue / 1000000, 0)),\n    MaxCPU = max(iff(CounterName == 'cpuUsageNanoCores', CounterValue / 1000000, 0)),\n    AvgMemory = avg(iff(CounterName == 'memoryWorkingSetBytes', CounterValue / 1024 / 1024, 0)),\n    MaxMemory = max(iff(CounterName == 'memoryWorkingSetBytes', CounterValue / 1024 / 1024, 0))\n    by NodeName, bin(TimeGenerated, 5m)\n| project \n    TimeGenerated,\n    NodeName,\n    ['CPU (millicores)'] = round(AvgCPU, 2),\n    ['Memory (MB)'] = round(AvgMemory, 2)",
        "size": 0,
        "title": "Node Resource Utilization (5m intervals)",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "timechart"
      },
      "name": "query-aks-node-resources"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let startTime = {TimeRange:start};\nlet endTime = {TimeRange:end};\nKubePodInventory\n| where TimeGenerated between (startTime .. endTime)\n| where ClusterName == 'ailydian-aks'\n| where ContainerRestartCount > 0\n| summarize \n    TotalRestarts = sum(ContainerRestartCount),\n    LastRestart = max(TimeGenerated)\n    by Namespace, PodName, ContainerName\n| order by TotalRestarts desc\n| take 20\n| project \n    Namespace,\n    Pod = PodName,\n    Container = ContainerName,\n    ['Total Restarts'] = TotalRestarts,\n    ['Last Restart'] = LastRestart",
        "size": 0,
        "title": "Top 20 Pods by Restart Count",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Total Restarts",
              "formatter": 8,
              "formatOptions": {
                "palette": "redGreen"
              }
            }
          ]
        }
      },
      "name": "query-aks-restarts"
    },
    {
      "type": 1,
      "content": {
        "json": "---\n\n## üóÑÔ∏è Database & Caching Analytics\n\nSQL Database and Redis Cache performance, query analysis, and optimization insights."
      },
      "name": "text-database-header"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "AzureDiagnostics\n| where ResourceProvider == 'MICROSOFT.SQL'\n| where Category == 'QueryStoreRuntimeStatistics'\n| where TimeGenerated {TimeRange}\n| extend \n    query_hash = column_ifexists('query_hash_s', ''),\n    execution_count = column_ifexists('execution_count_d', 0),\n    avg_duration_ms = column_ifexists('avg_duration_d', 0),\n    avg_cpu_time_ms = column_ifexists('avg_cpu_time_d', 0),\n    avg_logical_reads = column_ifexists('avg_logical_io_reads_d', 0)\n| where execution_count > 0\n| summarize \n    TotalExecutions = sum(execution_count),\n    AvgDuration = avg(avg_duration_ms),\n    AvgCPU = avg(avg_cpu_time_ms),\n    AvgReads = avg(avg_logical_reads)\n    by query_hash\n| extend ImpactScore = (TotalExecutions * AvgDuration) / 1000\n| order by ImpactScore desc\n| take 15\n| project \n    ['Query Hash'] = query_hash,\n    ['Executions'] = TotalExecutions,\n    ['Avg Duration (ms)'] = round(AvgDuration, 2),\n    ['Avg CPU (ms)'] = round(AvgCPU, 2),\n    ['Avg Reads'] = round(AvgReads, 0),\n    ['Impact Score'] = round(ImpactScore, 2)",
        "size": 0,
        "title": "Top 15 SQL Queries by Performance Impact",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Impact Score",
              "formatter": 8,
              "formatOptions": {
                "palette": "redGreen"
              }
            }
          ]
        }
      },
      "name": "query-sql-top-queries"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "customMetrics\n| where name in ('redis_cache_hits', 'redis_cache_misses')\n| where timestamp {TimeRange}\n| extend MetricType = name\n| summarize Count = sum(value) by MetricType, bin(timestamp, 5m)\n| evaluate pivot(MetricType, sum(Count))\n| extend \n    TotalRequests = redis_cache_hits + redis_cache_misses,\n    HitRate = round((redis_cache_hits * 100.0 / (redis_cache_hits + redis_cache_misses)), 2)\n| project \n    timestamp,\n    ['Cache Hits'] = redis_cache_hits,\n    ['Cache Misses'] = redis_cache_misses,\n    ['Hit Rate %'] = HitRate\n| render timechart",
        "size": 0,
        "title": "Redis Cache Hit Rate Over Time",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "timechart"
      },
      "name": "query-redis-hit-rate"
    },
    {
      "type": 1,
      "content": {
        "json": "---\n\n## üîç Search & AI Services\n\nCognitive Search analytics, query patterns, and performance metrics."
      },
      "name": "text-search-header"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "customEvents\n| where name == 'SearchQuery'\n| where timestamp {TimeRange}\n| extend \n    QueryText = tostring(customDimensions.query),\n    QueryType = tostring(customDimensions.queryType),\n    ResultCount = toint(customDimensions.resultCount),\n    Duration = toint(customDimensions.durationMs),\n    Language = tostring(customDimensions.language)\n| where isnotempty(QueryText)\n| summarize \n    Count = count(),\n    AvgDuration = avg(Duration),\n    AvgResults = avg(ResultCount)\n    by QueryText, QueryType, Language\n| order by Count desc\n| take 20\n| project \n    ['Search Query'] = QueryText,\n    ['Type'] = QueryType,\n    Language,\n    ['Count'] = Count,\n    ['Avg Duration (ms)'] = round(AvgDuration, 2),\n    ['Avg Results'] = round(AvgResults, 0)",
        "size": 0,
        "title": "Top 20 Search Queries",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "table"
      },
      "name": "query-search-top-queries"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "customEvents\n| where name == 'SearchQuery'\n| where timestamp {TimeRange}\n| extend QueryType = tostring(customDimensions.queryType)\n| summarize Count = count() by QueryType, bin(timestamp, 1h)\n| render columnchart",
        "size": 0,
        "title": "Search Query Types Distribution",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "barchart"
      },
      "name": "query-search-types"
    },
    {
      "type": 1,
      "content": {
        "json": "---\n\n## üì° Real-Time Communication (SignalR)\n\nWebSocket connections, message throughput, and hub activity."
      },
      "name": "text-signalr-header"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "customEvents\n| where name == 'SignalRMessage'\n| where timestamp {TimeRange}\n| extend \n    Hub = tostring(customDimensions.hub),\n    Method = tostring(customDimensions.method),\n    UserId = tostring(customDimensions.userId)\n| summarize \n    MessageCount = count(),\n    UniqueUsers = dcount(UserId)\n    by Hub, bin(timestamp, 5m)\n| render timechart",
        "size": 0,
        "title": "SignalR Message Traffic by Hub",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "timechart"
      },
      "name": "query-signalr-traffic"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "customEvents\n| where name in ('SignalRConnected', 'SignalRDisconnected')\n| where timestamp {TimeRange}\n| extend \n    EventType = name,\n    ConnectionId = tostring(customDimensions.connectionId)\n| summarize \n    Connects = countif(EventType == 'SignalRConnected'),\n    Disconnects = countif(EventType == 'SignalRDisconnected')\n    by bin(timestamp, 5m)\n| extend ActiveConnections = row_cumsum(Connects - Disconnects)\n| project timestamp, ActiveConnections\n| render timechart",
        "size": 0,
        "title": "Active SignalR Connections Over Time",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "areachart"
      },
      "name": "query-signalr-connections"
    },
    {
      "type": 1,
      "content": {
        "json": "---\n\n## üîí Security & Compliance\n\nSecurity events, authentication patterns, and threat detection."
      },
      "name": "text-security-header"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "SigninLogs\n| where TimeGenerated {TimeRange}\n| where ResultType != 0\n| extend \n    ErrorCode = ResultType,\n    FailureReason = ResultDescription,\n    Location = LocationDetails.city,\n    Country = LocationDetails.countryOrRegion\n| summarize \n    FailedAttempts = count(),\n    UniqueUsers = dcount(UserPrincipalName)\n    by ErrorCode, FailureReason\n| order by FailedAttempts desc\n| take 10\n| project \n    ['Error Code'] = ErrorCode,\n    ['Reason'] = FailureReason,\n    ['Failed Attempts'] = FailedAttempts,\n    ['Unique Users'] = UniqueUsers",
        "size": 0,
        "title": "Top 10 Authentication Failures",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Failed Attempts",
              "formatter": 8,
              "formatOptions": {
                "palette": "red"
              }
            }
          ]
        }
      },
      "name": "query-auth-failures"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "AzureDiagnostics\n| where ResourceType == 'FRONTDOORS'\n| where action_s == 'Block'\n| where TimeGenerated {TimeRange}\n| extend \n    RuleName = ruleName_s,
        ClientCountry = clientCountry_s,\n    ClientIP = clientIP_s\n| summarize BlockedRequests = count() by RuleName, ClientCountry\n| order by BlockedRequests desc\n| take 15\n| project \n    ['WAF Rule'] = RuleName,\n    Country = ClientCountry,\n    ['Blocked Requests'] = BlockedRequests",
        "size": 0,
        "title": "Top 15 WAF Blocks by Rule & Country",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Blocked Requests",
              "formatter": 8,
              "formatOptions": {
                "palette": "orange"
              }
            }
          ]
        }
      },
      "name": "query-waf-blocks"
    },
    {
      "type": 1,
      "content": {
        "json": "---\n\n## üí∞ Cost Analysis\n\nResource cost breakdown, optimization opportunities, and budget tracking."
      },
      "name": "text-cost-header"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "AzureActivity\n| where TimeGenerated {TimeRange}\n| where OperationNameValue contains 'MICROSOFT.RESOURCES/DEPLOYMENTS'\n| extend \n    ResourceType = tostring(split(ResourceId, '/')[6]),\n    ResourceName = tostring(split(ResourceId, '/')[8])\n| summarize \n    DeploymentCount = count(),\n    LastDeployment = max(TimeGenerated)\n    by ResourceType, ResourceName\n| order by DeploymentCount desc\n| take 10\n| project \n    ['Resource Type'] = ResourceType,\n    ['Resource Name'] = ResourceName,\n    ['Deployment Count'] = DeploymentCount,\n    ['Last Deployment'] = LastDeployment",
        "size": 0,
        "title": "Top 10 Frequently Deployed Resources",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "table"
      },
      "name": "query-deployments"
    },
    {
      "type": 1,
      "content": {
        "json": "---\n\n## üéØ Custom Business KPIs\n\nAilydian-specific metrics and business intelligence."
      },
      "name": "text-kpi-header"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "customEvents\n| where name in ('ConversationStarted', 'ConversationEnded', 'ConversationRating')\n| where timestamp {TimeRange}\n| extend \n    EventType = name,\n    ConversationId = tostring(customDimensions.conversationId),\n    UserId = tostring(customDimensions.userId),\n    Duration = toint(customDimensions.durationMinutes),\n    Rating = toint(customDimensions.rating)\n| summarize \n    TotalConversations = dcountif(ConversationId, EventType == 'ConversationStarted'),\n    CompletedConversations = dcountif(ConversationId, EventType == 'ConversationEnded'),\n    AvgDuration = avgif(Duration, EventType == 'ConversationEnded'),\n    AvgRating = avgif(Rating, EventType == 'ConversationRating'),\n    UniqueUsers = dcount(UserId)\n| extend CompletionRate = round((CompletedConversations * 100.0 / TotalConversations), 2)\n| project \n    ['Total Conversations'] = TotalConversations,\n    ['Completed'] = CompletedConversations,\n    ['Completion Rate'] = strcat(CompletionRate, '%'),\n    ['Avg Duration (min)'] = round(AvgDuration, 2),\n    ['Avg Rating'] = round(AvgRating, 2),\n    ['Unique Users'] = UniqueUsers",
        "size": 3,
        "title": "AI Conversation Metrics",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "tiles",
        "tileSettings": {
          "showBorder": true
        }
      },
      "name": "query-conversation-kpis"
    }
  ],
  "fallbackResourceIds": [
    "/subscriptions/{subscriptionId}/resourceGroups/ailydian-ultra-pro-rg/providers/Microsoft.Insights/components/ailydian-insights"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
