# ============================================================================
# AZURE DEPLOYMENT CI/CD PIPELINE
# ============================================================================
# Triggers: Push to main, manual workflow dispatch
# Features: Build, test, deploy to Azure Container Apps
# Security: OIDC authentication (no secrets)
# ============================================================================

name: Azure Production Deployment

on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

permissions:
  id-token: write
  contents: read

env:
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  RESOURCE_GROUP: ailydian-production-rg
  REGISTRY_NAME: ailydianprodacr

jobs:
  # ============================================================================
  # BUILD JOB
  # ============================================================================
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci --ignore-scripts

      - name: 🔍 Run linter
        run: npm run lint || echo "No lint script"

      - name: 🧪 Run tests
        run: npm test || echo "No tests yet"

      - name: 🏗️ Build application
        run: npm run build || echo "No build script"

      - name: 📊 Upload build artifacts
        uses: actions/upload-artifact@v5
        with:
          name: build-artifacts
          path: |
            package.json
            package-lock.json
            server.js
            middleware/
            api/
            public/
            services/
            database/
          retention-days: 1

  # ============================================================================
  # DOCKER BUILD & PUSH
  # ============================================================================
  docker:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        service:
          - { name: 'api', dockerfile: './Dockerfile', port: 3100 }
          - { name: 'travel', dockerfile: './infra/docker/Dockerfile.travel', port: 3200 }
          - { name: 'borsa', dockerfile: './infra/docker/Dockerfile.borsa', port: 3300 }
          - { name: 'blockchain', dockerfile: './infra/docker/Dockerfile.blockchain', port: 3400 }
          - { name: 'video', dockerfile: './infra/docker/Dockerfile.video', port: 3500 }
          - { name: 'docs', dockerfile: './infra/docker/Dockerfile.docs', port: 4003 }

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5

      - name: 🔐 Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: 🐳 Login to Azure Container Registry
        run: |
          az acr login --name ${{ env.REGISTRY_NAME }}

      - name: 🏗️ Build Docker image
        run: |
          docker build \
            -t ${{ env.REGISTRY_NAME }}.azurecr.io/ailydian-${{ matrix.service.name }}:${{ github.sha }} \
            -t ${{ env.REGISTRY_NAME }}.azurecr.io/ailydian-${{ matrix.service.name }}:latest \
            -f ${{ matrix.service.dockerfile }} \
            .

      - name: 🔍 Scan image for vulnerabilities
        run: |
          docker scout cves ${{ env.REGISTRY_NAME }}.azurecr.io/ailydian-${{ matrix.service.name }}:${{ github.sha }} || true

      - name: 📤 Push Docker image
        run: |
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/ailydian-${{ matrix.service.name }}:${{ github.sha }}
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/ailydian-${{ matrix.service.name }}:latest

  # ============================================================================
  # DEPLOY TO AZURE
  # ============================================================================
  deploy:
    name: Deploy to Azure
    runs-on: ubuntu-latest
    needs: docker
    environment: production

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5

      - name: 🔐 Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: 🚀 Deploy Main API
        run: |
          az containerapp update \
            --name ailydian-production-api \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image ${{ env.REGISTRY_NAME }}.azurecr.io/ailydian-api:${{ github.sha }}

      - name: ⏳ Wait for deployment
        run: sleep 30

      - name: 🏥 Health check
        run: |
          FQDN=$(az containerapp show \
            --name ailydian-production-api \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --query properties.configuration.ingress.fqdn \
            -o tsv)

          curl -f https://$FQDN/api/health || exit 1

      - name: 📊 Deployment summary
        run: |
          echo "### ✅ Deployment Successful" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: Production" >> $GITHUB_STEP_SUMMARY
          echo "- **Deployed at**: $(date -u)" >> $GITHUB_STEP_SUMMARY

  # ============================================================================
  # SMOKE TESTS
  # ============================================================================
  smoke-tests:
    name: Run Smoke Tests
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'

      - name: 📦 Install Playwright
        run: |
          npm ci
          npx playwright install --with-deps

      - name: 🧪 Run smoke tests
        env:
          BASE_URL: https://ailydian.com
        run: |
          npx playwright test tests/smoke/production.spec.ts

      - name: 📊 Upload test results
        if: always()
        uses: actions/upload-artifact@v5
        with:
          name: smoke-test-results
          path: playwright-report/
          retention-days: 7

  # ============================================================================
  # ROLLBACK ON FAILURE
  # ============================================================================
  rollback:
    name: Rollback on Failure
    runs-on: ubuntu-latest
    needs: [deploy, smoke-tests]
    if: failure()

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5

      - name: 🔐 Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: ⏮️ Execute rollback
        run: |
          bash infra/scripts/rollback.sh

      - name: 📢 Notify team
        run: |
          echo "🚨 Deployment failed - rollback executed" >> $GITHUB_STEP_SUMMARY
