name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  string-guard:
    name: String Guard - AI Provider Name Detection
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd ops/tools
          npm install || echo "No package.json in ops/tools, skipping"

      - name: Run String Guard
        id: string_guard
        run: |
          node ops/tools/string-guard.js --report=json --output=ops/reports/violations.json
        continue-on-error: true

      - name: Check violations
        run: |
          if [ -f ops/reports/violations.json ]; then
            CRITICAL=$(jq '.summary.critical' ops/reports/violations.json)
            echo "Critical violations found: $CRITICAL"

            if [ "$CRITICAL" -gt 0 ]; then
              echo "❌ FAIL: $CRITICAL critical violations found"
              echo "Review ops/reports/violations.json for details"
              exit 1
            else
              echo "✅ PASS: No critical violations"
            fi
          else
            echo "⚠️ WARNING: violations.json not found"
            exit 1
          fi

      - name: Upload violations report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-violations
          path: ops/reports/violations.json
          retention-days: 30

  secret-scan:
    name: Secret Fallback Detection
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Scan for secret fallbacks
        run: |
          echo "Scanning for hardcoded secret fallbacks..."
          COUNT=$(grep -r "process.env.*||" --include="*.js" 2>/dev/null | wc -l || echo "0")
          echo "Found $COUNT instances of secret fallbacks"

          if [ "$COUNT" -gt 0 ]; then
            echo "❌ WARNING: $COUNT secret fallback patterns found"
            echo "These should be removed in Week 2"
            # Don't fail the build yet, just warn
            exit 0
          else
            echo "✅ PASS: No secret fallbacks found"
          fi

  dependency-check:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Run npm audit
        run: |
          npm audit --production --audit-level=high || true

      - name: Check for critical vulnerabilities
        run: |
          CRITICAL=$(npm audit --json --production 2>/dev/null | jq '.metadata.vulnerabilities.critical // 0')
          HIGH=$(npm audit --json --production 2>/dev/null | jq '.metadata.vulnerabilities.high // 0')

          echo "Critical vulnerabilities: $CRITICAL"
          echo "High vulnerabilities: $HIGH"

          if [ "$CRITICAL" -gt 0 ]; then
            echo "❌ FAIL: $CRITICAL critical vulnerabilities found"
            exit 1
          elif [ "$HIGH" -gt 5 ]; then
            echo "⚠️ WARNING: $HIGH high vulnerabilities found"
            # Don't fail, just warn
            exit 0
          else
            echo "✅ PASS: No critical vulnerabilities"
          fi

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [string-guard, secret-scan, dependency-check]
    if: always()

    steps:
      - name: Generate summary
        run: |
          echo "## Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| String Guard | ${{ needs.string-guard.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Secret Scan | ${{ needs.secret-scan.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Dependency Check | ${{ needs.dependency-check.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Phase 1 Week 2** - Anonymization in progress" >> $GITHUB_STEP_SUMMARY
